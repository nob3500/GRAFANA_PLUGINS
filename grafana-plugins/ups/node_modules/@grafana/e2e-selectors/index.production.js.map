{"version":3,"file":"index.production.js","sources":["../src/selectors/pages.ts","../src/selectors/components.ts","../src/selectors/index.ts"],"sourcesContent":["export const Pages = {\n  Login: {\n    url: '/login',\n    username: 'Username input field',\n    password: 'Password input field',\n    submit: 'Login button',\n    skip: 'Skip change password button',\n  },\n  Home: {\n    url: '/',\n  },\n  DataSource: {\n    name: 'Data source settings page name input field',\n    delete: 'Data source settings page Delete button',\n    saveAndTest: 'Data source settings page Save and Test button',\n    alert: 'Data source settings page Alert',\n    alertMessage: 'Data source settings page Alert message',\n  },\n  DataSources: {\n    url: '/datasources',\n    dataSources: (dataSourceName: string) => `Data source list item ${dataSourceName}`,\n  },\n  AddDataSource: {\n    url: '/datasources/new',\n    dataSourcePlugins: (pluginName: string) => `Data source plugin item ${pluginName}`,\n  },\n  ConfirmModal: {\n    delete: 'Confirm Modal Danger Button',\n  },\n  AddDashboard: {\n    url: '/dashboard/new',\n    addNewPanel: 'Add new panel',\n  },\n  Dashboard: {\n    url: (uid: string) => `/d/${uid}`,\n    Toolbar: {\n      toolbarItems: (button: string) => `Dashboard navigation bar button ${button}`,\n      navBar: () => '.navbar',\n    },\n    SubMenu: {\n      submenuItem: 'Dashboard template variables submenu item',\n      submenuItemLabels: (item: string) => `Dashboard template variables submenu Label ${item}`,\n      submenuItemValueDropDownValueLinkTexts: (item: string) =>\n        `Dashboard template variables Variable Value DropDown value link text ${item}`,\n      submenuItemValueDropDownDropDown: 'Dashboard template variables Variable Value DropDown DropDown',\n      submenuItemValueDropDownOptionTexts: (item: string) =>\n        `Dashboard template variables Variable Value DropDown option text ${item}`,\n    },\n    Settings: {\n      General: {\n        deleteDashBoard: 'Dashboard settings page delete dashboard button',\n        sectionItems: (item: string) => `Dashboard settings section item ${item}`,\n        saveDashBoard: 'Dashboard settings aside actions Save button',\n        saveAsDashBoard: 'Dashboard settings aside actions Save As button',\n        timezone: 'Time zone picker select container',\n        title: 'Dashboard settings page title',\n      },\n      Annotations: {\n        List: {\n          addAnnotationCTA: 'Call to action button Add Annotation Query',\n        },\n      },\n      Variables: {\n        List: {\n          addVariableCTA: 'Call to action button Add variable',\n          newButton: 'Variable editor New variable button',\n          table: 'Variable editor Table',\n          tableRowNameFields: (variableName: string) => `Variable editor Table Name field ${variableName}`,\n          tableRowDefinitionFields: (variableName: string) => `Variable editor Table Definition field ${variableName}`,\n          tableRowArrowUpButtons: (variableName: string) => `Variable editor Table ArrowUp button ${variableName}`,\n          tableRowArrowDownButtons: (variableName: string) => `Variable editor Table ArrowDown button ${variableName}`,\n          tableRowDuplicateButtons: (variableName: string) => `Variable editor Table Duplicate button ${variableName}`,\n          tableRowRemoveButtons: (variableName: string) => `Variable editor Table Remove button ${variableName}`,\n        },\n        Edit: {\n          General: {\n            headerLink: 'Variable editor Header link',\n            modeLabelNew: 'Variable editor Header mode New',\n            modeLabelEdit: 'Variable editor Header mode Edit',\n            generalNameInput: 'Variable editor Form Name field',\n            generalTypeSelect: 'Variable editor Form Type select',\n            generalLabelInput: 'Variable editor Form Label field',\n            generalHideSelect: 'Variable editor Form Hide select',\n            selectionOptionsMultiSwitch: 'Variable editor Form Multi switch',\n            selectionOptionsIncludeAllSwitch: 'Variable editor Form IncludeAll switch',\n            selectionOptionsCustomAllInput: 'Variable editor Form IncludeAll field',\n            previewOfValuesOption: 'Variable editor Preview of Values option',\n            submitButton: 'Variable editor Submit button',\n          },\n          QueryVariable: {\n            queryOptionsDataSourceSelect: 'Variable editor Form Query DataSource select',\n            queryOptionsRefreshSelect: 'Variable editor Form Query Refresh select',\n            queryOptionsRegExInput: 'Variable editor Form Query RegEx field',\n            queryOptionsSortSelect: 'Variable editor Form Query Sort select',\n            queryOptionsQueryInput: 'Variable editor Form Default Variable Query Editor textarea',\n            valueGroupsTagsEnabledSwitch: 'Variable editor Form Query UseTags switch',\n            valueGroupsTagsTagsQueryInput: 'Variable editor Form Query TagsQuery field',\n            valueGroupsTagsTagsValuesQueryInput: 'Variable editor Form Query TagsValuesQuery field',\n          },\n          ConstantVariable: {\n            constantOptionsQueryInput: 'Variable editor Form Constant Query field',\n          },\n        },\n      },\n    },\n  },\n  Dashboards: {\n    url: '/dashboards',\n    dashboards: (title: string) => `Dashboard search item ${title}`,\n  },\n  SaveDashboardAsModal: {\n    newName: 'Save dashboard title field',\n    save: 'Save dashboard button',\n  },\n  SaveDashboardModal: {\n    save: 'Dashboard settings Save Dashboard Modal Save button',\n    saveVariables: 'Dashboard settings Save Dashboard Modal Save variables checkbox',\n    saveTimerange: 'Dashboard settings Save Dashboard Modal Save timerange checkbox',\n  },\n  SharePanelModal: {\n    linkToRenderedImage: 'Link to rendered image',\n  },\n  Explore: {\n    url: '/explore',\n    General: {\n      container: 'Explore',\n      graph: 'Explore Graph',\n      runButton: 'Run button',\n      table: 'Explore Table',\n    },\n    Toolbar: {\n      navBar: () => '.explore-toolbar',\n    },\n  },\n  SoloPanel: {\n    url: (page: string) => `/d-solo/${page}`,\n  },\n  PluginsList: {\n    page: 'Plugins list page',\n    list: 'Plugins list',\n    listItem: 'Plugins list item',\n    signatureErrorNotice: 'Unsigned plugins notice',\n  },\n  PluginPage: {\n    page: 'Plugin page',\n    signatureInfo: 'Plugin signature info',\n  },\n};\n","import { Pages } from './pages';\n\nexport const Components = {\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: 'Test Data Query scenario select container',\n        scenarioSelect: 'Test Data Query scenario select',\n        max: 'TestData max',\n        min: 'TestData min',\n        noise: 'TestData noise',\n        seriesCount: 'TestData series count',\n        spread: 'TestData spread',\n        startValue: 'TestData start value',\n      },\n    },\n  },\n  Panels: {\n    Panel: {\n      title: (title: string) => `Panel header title item ${title}`,\n      headerItems: (item: string) => `Panel header item ${item}`,\n      containerByTitle: (title: string) => `Panel container title ${title}`,\n    },\n    Visualization: {\n      Graph: {\n        VisualizationTab: {\n          legendSection: 'Legend section',\n        },\n        Legend: {\n          legendItemAlias: (name: string) => `gpl alias ${name}`,\n          showLegendSwitch: 'gpl show legend',\n        },\n        xAxis: {\n          labels: () => 'div.flot-x-axis > div.flot-tick-label',\n        },\n      },\n      BarGauge: {\n        value: 'Bar gauge value',\n      },\n    },\n  },\n  Drawer: {\n    General: {\n      title: (title: string) => `Drawer title ${title}`,\n      expand: 'Drawer expand',\n      contract: 'Drawer contract',\n      close: 'Drawer close',\n      rcContentWrapper: () => '.drawer-content-wrapper',\n    },\n  },\n  PanelEditor: {\n    General: {\n      content: 'Panel editor content',\n    },\n    OptionsPane: {\n      content: 'Panel editor option pane content',\n      close: Pages.Dashboard.Toolbar.toolbarItems('Close options pane'),\n      open: Pages.Dashboard.Toolbar.toolbarItems('Open options pane'),\n      select: 'Panel editor option pane select',\n      tab: (title: string) => `Panel editor option pane tab ${title}`,\n    },\n    // not sure about the naming *DataPane*\n    DataPane: {\n      content: 'Panel editor data pane content',\n    },\n  },\n  PanelInspector: {\n    Data: {\n      content: 'Panel inspector Data content',\n    },\n    Stats: {\n      content: 'Panel inspector Stats content',\n    },\n    Json: {\n      content: 'Panel inspector Json content',\n    },\n    Query: {\n      content: 'Panel inspector Query content',\n      refreshButton: 'Panel inspector Query refresh button',\n      jsonObjectKeys: () => '.json-formatter-key',\n    },\n  },\n  Tab: {\n    title: (title: string) => `Tab ${title}`,\n    active: () => '[class*=\"-activeTabStyle\"]',\n  },\n  QueryTab: {\n    content: 'Query editor tab content',\n    queryInspectorButton: 'Query inspector button',\n    addQuery: 'Query editor add query button',\n  },\n  QueryEditorRows: {\n    rows: 'Query editor row',\n  },\n  QueryEditorRow: {\n    actionButton: (title: string) => `${title} query operation action`,\n    title: (refId: string) => `Query editor row title ${refId}`,\n  },\n  AlertTab: {\n    content: 'Alert editor tab content',\n  },\n  Alert: {\n    alert: (severity: string) => `Alert ${severity}`,\n  },\n  TransformTab: {\n    content: 'Transform editor tab content',\n    newTransform: (name: string) => `New transform ${name}`,\n    transformationEditor: (name: string) => `Transformation editor ${name}`,\n    transformationEditorDebugger: (name: string) => `Transformation editor debugger ${name}`,\n  },\n  Transforms: {\n    Reduce: {\n      modeLabel: 'Transform mode label',\n      calculationsLabel: 'Transform calculations label',\n    },\n  },\n  QueryEditorToolbarItem: {\n    button: (title: string) => `QueryEditor toolbar item button ${title}`,\n  },\n  BackButton: {\n    backArrow: 'Go Back button',\n  },\n  OptionsGroup: {\n    toggle: (title: string) => `Options group ${title}`,\n  },\n  PluginVisualization: {\n    item: (title: string) => `Plugin visualization item ${title}`,\n    current: () => '[class*=\"-currentVisualizationItem\"]',\n  },\n  Select: {\n    option: 'Select option',\n    input: () => 'input[id*=\"react-select-\"]',\n    singleValue: () => 'div[class*=\"-singleValue\"]',\n  },\n  FieldConfigEditor: {\n    content: 'Field config editor content',\n  },\n  OverridesConfigEditor: {\n    content: 'Field overrides editor content',\n  },\n  FolderPicker: {\n    container: 'Folder picker select container',\n  },\n  DataSourcePicker: {\n    container: 'Data source picker select container',\n  },\n  TimeZonePicker: {\n    container: 'Time zone picker select container',\n  },\n  QueryField: { container: 'Query field' },\n  ValuePicker: {\n    select: (name: string) => `Value picker select ${name}`,\n  },\n  Search: {\n    section: 'Search section',\n    items: 'Search items',\n  },\n  DashboardLinks: {\n    container: 'Dashboard link container',\n    dropDown: 'Dashboard link dropdown',\n    link: 'Dashboard link',\n  },\n};\n","import { Pages } from './pages';\nimport { Components } from './components';\nimport { E2ESelectors } from '../types';\n\nexport const selectors: { pages: E2ESelectors<typeof Pages>; components: E2ESelectors<typeof Components> } = {\n  pages: Pages,\n  components: Components,\n};\n"],"names":["Pages","Login","url","username","password","submit","skip","Home","DataSource","name","delete","saveAndTest","alert","alertMessage","DataSources","dataSources","dataSourceName","AddDataSource","dataSourcePlugins","pluginName","ConfirmModal","AddDashboard","addNewPanel","Dashboard","uid","Toolbar","toolbarItems","button","navBar","SubMenu","submenuItem","submenuItemLabels","item","submenuItemValueDropDownValueLinkTexts","submenuItemValueDropDownDropDown","submenuItemValueDropDownOptionTexts","Settings","General","deleteDashBoard","sectionItems","saveDashBoard","saveAsDashBoard","timezone","title","Annotations","List","addAnnotationCTA","Variables","addVariableCTA","newButton","table","tableRowNameFields","variableName","tableRowDefinitionFields","tableRowArrowUpButtons","tableRowArrowDownButtons","tableRowDuplicateButtons","tableRowRemoveButtons","Edit","headerLink","modeLabelNew","modeLabelEdit","generalNameInput","generalTypeSelect","generalLabelInput","generalHideSelect","selectionOptionsMultiSwitch","selectionOptionsIncludeAllSwitch","selectionOptionsCustomAllInput","previewOfValuesOption","submitButton","QueryVariable","queryOptionsDataSourceSelect","queryOptionsRefreshSelect","queryOptionsRegExInput","queryOptionsSortSelect","queryOptionsQueryInput","valueGroupsTagsEnabledSwitch","valueGroupsTagsTagsQueryInput","valueGroupsTagsTagsValuesQueryInput","ConstantVariable","constantOptionsQueryInput","Dashboards","dashboards","SaveDashboardAsModal","newName","save","SaveDashboardModal","saveVariables","saveTimerange","SharePanelModal","linkToRenderedImage","Explore","container","graph","runButton","SoloPanel","page","PluginsList","list","listItem","signatureErrorNotice","PluginPage","signatureInfo","Components","TestData","QueryTab","scenarioSelectContainer","scenarioSelect","max","min","noise","seriesCount","spread","startValue","Panels","Panel","headerItems","containerByTitle","Visualization","Graph","VisualizationTab","legendSection","Legend","legendItemAlias","showLegendSwitch","xAxis","labels","BarGauge","value","Drawer","expand","contract","close","rcContentWrapper","PanelEditor","content","OptionsPane","open","select","tab","DataPane","PanelInspector","Data","Stats","Json","Query","refreshButton","jsonObjectKeys","Tab","active","queryInspectorButton","addQuery","QueryEditorRows","rows","QueryEditorRow","actionButton","refId","AlertTab","Alert","severity","TransformTab","newTransform","transformationEditor","transformationEditorDebugger","Transforms","Reduce","modeLabel","calculationsLabel","QueryEditorToolbarItem","BackButton","backArrow","OptionsGroup","toggle","PluginVisualization","current","Select","option","input","singleValue","FieldConfigEditor","OverridesConfigEditor","FolderPicker","DataSourcePicker","TimeZonePicker","QueryField","ValuePicker","Search","section","items","DashboardLinks","dropDown","link","selectors","pages","components"],"mappings":"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"}